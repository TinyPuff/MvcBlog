@model MvcBlog.Models.ViewModels.HomeVM
@{
    ViewData["Title"] = "Home Page";
}

@foreach (var item in Model.Posts)
{
    <div class="card w-50 mb-2">
        <div class="card-body">
            <h4 class="card-title">@item.Title</h4>
            <h6 class="card-subtitle mb-2 text-body-secondary">@item.Author.UserName</h6>
            <p class="card-text">@Html.Raw(WebUtility.HtmlEncode(item.Body).Replace("\n", "<br />"))</p>
            <a class="btn btn-primary" href="/Posts/Details/@item.ID">Read more</a>
        </div>
    </div>
}

@{
    var prevDisabled = !Model.Posts.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Posts.HasNextPage ? "disabled" : "";
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        <!-- Previous Page Link -->
        @if (Model.Posts.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-pageNumber="@(Model.Posts.PageIndex - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        <!-- Page Number Links -->
        @for (int i = 1; i <= Model.Posts.TotalPages; i++)
        {
            if (i == Model.Posts.PageIndex)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-route-pageNumber="@i">@i</a>
                </li>
            }
        }

        <!-- Next Page Link -->
        @if (Model.Posts.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-pageNumber="@(Model.Posts.PageIndex + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>